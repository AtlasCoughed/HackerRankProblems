Write code to partition a linked list around a value x, such that all nodes less than x come before all nodes greater than 
or equal to x. If x is contained within the list, the values of x only need to be after the elements less than x. 

The partition element can appear anywhere in the 'right partition'; it does not need to appear between the left and right partitions.

function partitionList(node, x) {
  let beforeHead = null;
  let beforeTail = null;
  let afterHead = null;
  let afterTail = null;

  
  if(!node || x){
    return null;
  }
  while(node !== null){
    if(node.value < x){
      if(head){
        beforeTail.next = node;
        beforeTail = node;
      } else {
        beforeHead = node;
        beforeTail = beforeHead;
      }
    } else {
      if(tail){
        afterTail.next = node;
        afterTail = node;
      } else {
        afterHead = node;
        afterTail = afterHead;
      }
    }
    list = list.next;
  }
  
  if(beforeHead === null){
    return afterHead;
  }
  beforeTail.next = afterHead;
  return beforeHead;
  return head;
}

// Optomized version
